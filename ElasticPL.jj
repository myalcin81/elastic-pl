/*@bgen(jjtree) Generated By:JJTree: Do not edit this line. ElasticPL.jj */
/*@egen*/
options {
               
    STATIC=false;
                          
                      
}

PARSER_BEGIN(ElasticPLParser)

public class ElasticPLParser/*@bgen(jjtree)*/implements ElasticPLParserTreeConstants/*@egen*/ {/*@bgen(jjtree)*/
  protected JJTElasticPLParserState jjtree = new JJTElasticPLParserState();

/*@egen*/


  public Node rootNode() {
    return jjtree.rootNode();
  }  

}

PARSER_END(ElasticPLParser)


SKIP : /* WHITE SPACE */
{
  " "
| "\t"
| "\n"
| "\r"
| "\f"
}

TOKEN : /* LITERALS */
{
  < INTEGER_LITERAL: (<DIGIT>)+ >
}


void CompilationUnit() :
{/*@bgen(jjtree) CompilationUnit */
   ASTCompilationUnit jjtn000 = new ASTCompilationUnit(JJTCOMPILATIONUNIT);
   boolean jjtc000 = true;
   jjtree.openNodeScope(jjtn000);
   jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/
   String name;
}
{/*@bgen(jjtree) CompilationUnit */
   try {
/*@egen*/
   InputSpecificationStatement()
   (
       Statement()
   )*
   VerifyStatement()
   <EOF>/*@bgen(jjtree)*/
   } catch (Throwable jjte000) {
     if (jjtc000) {
       jjtree.clearNodeScope(jjtn000);
       jjtc000 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte000 instanceof RuntimeException) {
       throw (RuntimeException)jjte000;
     }
     if (jjte000 instanceof ParseException) {
       throw (ParseException)jjte000;
     }
     throw (Error)jjte000;
   } finally {
     if (jjtc000) {
       jjtree.closeNodeScope(jjtn000, true);
       jjtn000.jjtSetLastToken(getToken(0));
     }
   }
/*@egen*/
}



void Expression()      :
{}
{
  LOOKAHEAD( Id() "=" )
  Assignment()
|
  ConditionalOrExpression()
}



void Assignment():
{/*@bgen(jjtree) Assignment */
  ASTAssignment jjtn000 = new ASTAssignment(JJTASSIGNMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/ Token t; }
{/*@bgen(jjtree) Assignment */
   try {
/*@egen*/
   Id() "=" AdditiveExpression()/*@bgen(jjtree)*/
   } catch (Throwable jjte000) {
     if (jjtc000) {
       jjtree.clearNodeScope(jjtn000);
       jjtc000 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte000 instanceof RuntimeException) {
       throw (RuntimeException)jjte000;
     }
     if (jjte000 instanceof ParseException) {
       throw (ParseException)jjte000;
     }
     throw (Error)jjte000;
   } finally {
     if (jjtc000) {
       jjtree.closeNodeScope(jjtn000, true);
       jjtn000.jjtSetLastToken(getToken(0));
     }
   }
/*@egen*/
}

void ConditionalOrExpression()       :
{}
{
  ConditionalAndExpression()
  ( "||"/*@bgen(jjtree) #OrNode( 2) */
         {
           ASTOrNode jjtn001 = new ASTOrNode(JJTORNODE);
           boolean jjtc001 = true;
           jjtree.openNodeScope(jjtn001);
           jjtn001.jjtSetFirstToken(getToken(1));
         }
         try {
/*@egen*/ ConditionalAndExpression()/*@bgen(jjtree)*/
         } catch (Throwable jjte001) {
           if (jjtc001) {
             jjtree.clearNodeScope(jjtn001);
             jjtc001 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte001 instanceof RuntimeException) {
             throw (RuntimeException)jjte001;
           }
           if (jjte001 instanceof ParseException) {
             throw (ParseException)jjte001;
           }
           throw (Error)jjte001;
         } finally {
           if (jjtc001) {
             jjtree.closeNodeScope(jjtn001,  2);
             jjtn001.jjtSetLastToken(getToken(0));
           }
         }
/*@egen*/            )*
}

void ConditionalAndExpression()       :
{}
{
  InclusiveOrExpression()
  ( "&&"/*@bgen(jjtree) #AndNode( 2) */
         {
           ASTAndNode jjtn001 = new ASTAndNode(JJTANDNODE);
           boolean jjtc001 = true;
           jjtree.openNodeScope(jjtn001);
           jjtn001.jjtSetFirstToken(getToken(1));
         }
         try {
/*@egen*/ InclusiveOrExpression()/*@bgen(jjtree)*/
         } catch (Throwable jjte001) {
           if (jjtc001) {
             jjtree.clearNodeScope(jjtn001);
             jjtc001 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte001 instanceof RuntimeException) {
             throw (RuntimeException)jjte001;
           }
           if (jjte001 instanceof ParseException) {
             throw (ParseException)jjte001;
           }
           throw (Error)jjte001;
         } finally {
           if (jjtc001) {
             jjtree.closeNodeScope(jjtn001,  2);
             jjtn001.jjtSetLastToken(getToken(0));
           }
         }
/*@egen*/             )*
}

void InclusiveOrExpression()       :
{}
{
  ExclusiveOrExpression()
  ( "|"/*@bgen(jjtree) #BitwiseOrNode( 2) */
        {
          ASTBitwiseOrNode jjtn001 = new ASTBitwiseOrNode(JJTBITWISEORNODE);
          boolean jjtc001 = true;
          jjtree.openNodeScope(jjtn001);
          jjtn001.jjtSetFirstToken(getToken(1));
        }
        try {
/*@egen*/ ExclusiveOrExpression()/*@bgen(jjtree)*/
        } catch (Throwable jjte001) {
          if (jjtc001) {
            jjtree.clearNodeScope(jjtn001);
            jjtc001 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte001 instanceof RuntimeException) {
            throw (RuntimeException)jjte001;
          }
          if (jjte001 instanceof ParseException) {
            throw (ParseException)jjte001;
          }
          throw (Error)jjte001;
        } finally {
          if (jjtc001) {
            jjtree.closeNodeScope(jjtn001,  2);
            jjtn001.jjtSetLastToken(getToken(0));
          }
        }
/*@egen*/                   )*
}

void ExclusiveOrExpression()       :
{}
{
  AndExpression()
  ( "^"/*@bgen(jjtree) #BitwiseXorNode( 2) */
        {
          ASTBitwiseXorNode jjtn001 = new ASTBitwiseXorNode(JJTBITWISEXORNODE);
          boolean jjtc001 = true;
          jjtree.openNodeScope(jjtn001);
          jjtn001.jjtSetFirstToken(getToken(1));
        }
        try {
/*@egen*/ AndExpression()/*@bgen(jjtree)*/
        } catch (Throwable jjte001) {
          if (jjtc001) {
            jjtree.clearNodeScope(jjtn001);
            jjtc001 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte001 instanceof RuntimeException) {
            throw (RuntimeException)jjte001;
          }
          if (jjte001 instanceof ParseException) {
            throw (ParseException)jjte001;
          }
          throw (Error)jjte001;
        } finally {
          if (jjtc001) {
            jjtree.closeNodeScope(jjtn001,  2);
            jjtn001.jjtSetLastToken(getToken(0));
          }
        }
/*@egen*/                    )*
}

void AndExpression()       :
{}
{
  EqualityExpression()
  ( "&"/*@bgen(jjtree) #BitwiseAndNode( 2) */
        {
          ASTBitwiseAndNode jjtn001 = new ASTBitwiseAndNode(JJTBITWISEANDNODE);
          boolean jjtc001 = true;
          jjtree.openNodeScope(jjtn001);
          jjtn001.jjtSetFirstToken(getToken(1));
        }
        try {
/*@egen*/ EqualityExpression()/*@bgen(jjtree)*/
        } catch (Throwable jjte001) {
          if (jjtc001) {
            jjtree.clearNodeScope(jjtn001);
            jjtc001 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte001 instanceof RuntimeException) {
            throw (RuntimeException)jjte001;
          }
          if (jjte001 instanceof ParseException) {
            throw (ParseException)jjte001;
          }
          throw (Error)jjte001;
        } finally {
          if (jjtc001) {
            jjtree.closeNodeScope(jjtn001,  2);
            jjtn001.jjtSetLastToken(getToken(0));
          }
        }
/*@egen*/                    )*
}

void EqualityExpression()       :
{}
{
  RelationalExpression()
  (
     "=="/*@bgen(jjtree) #EQNode( 2) */
          {
            ASTEQNode jjtn001 = new ASTEQNode(JJTEQNODE);
            boolean jjtc001 = true;
            jjtree.openNodeScope(jjtn001);
            jjtn001.jjtSetFirstToken(getToken(1));
          }
          try {
/*@egen*/ RelationalExpression()/*@bgen(jjtree)*/
          } catch (Throwable jjte001) {
            if (jjtc001) {
              jjtree.clearNodeScope(jjtn001);
              jjtc001 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte001 instanceof RuntimeException) {
              throw (RuntimeException)jjte001;
            }
            if (jjte001 instanceof ParseException) {
              throw (ParseException)jjte001;
            }
            throw (Error)jjte001;
          } finally {
            if (jjtc001) {
              jjtree.closeNodeScope(jjtn001,  2);
              jjtn001.jjtSetLastToken(getToken(0));
            }
          }
/*@egen*/           
   |
     "!="/*@bgen(jjtree) #NENode( 2) */
          {
            ASTNENode jjtn002 = new ASTNENode(JJTNENODE);
            boolean jjtc002 = true;
            jjtree.openNodeScope(jjtn002);
            jjtn002.jjtSetFirstToken(getToken(1));
          }
          try {
/*@egen*/ RelationalExpression()/*@bgen(jjtree)*/
          } catch (Throwable jjte002) {
            if (jjtc002) {
              jjtree.clearNodeScope(jjtn002);
              jjtc002 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte002 instanceof RuntimeException) {
              throw (RuntimeException)jjte002;
            }
            if (jjte002 instanceof ParseException) {
              throw (ParseException)jjte002;
            }
            throw (Error)jjte002;
          } finally {
            if (jjtc002) {
              jjtree.closeNodeScope(jjtn002,  2);
              jjtn002.jjtSetLastToken(getToken(0));
            }
          }
/*@egen*/           
  )*
}

void RelationalExpression()       :
{}
{
  AdditiveExpression()
  (
    "<"/*@bgen(jjtree) #LTNode( 2) */
        {
          ASTLTNode jjtn001 = new ASTLTNode(JJTLTNODE);
          boolean jjtc001 = true;
          jjtree.openNodeScope(jjtn001);
          jjtn001.jjtSetFirstToken(getToken(1));
        }
        try {
/*@egen*/ AdditiveExpression()/*@bgen(jjtree)*/
        } catch (Throwable jjte001) {
          if (jjtc001) {
            jjtree.clearNodeScope(jjtn001);
            jjtc001 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte001 instanceof RuntimeException) {
            throw (RuntimeException)jjte001;
          }
          if (jjte001 instanceof ParseException) {
            throw (ParseException)jjte001;
          }
          throw (Error)jjte001;
        } finally {
          if (jjtc001) {
            jjtree.closeNodeScope(jjtn001,  2);
            jjtn001.jjtSetLastToken(getToken(0));
          }
        }
/*@egen*/           
   |
    ">"/*@bgen(jjtree) #GTNode( 2) */
        {
          ASTGTNode jjtn002 = new ASTGTNode(JJTGTNODE);
          boolean jjtc002 = true;
          jjtree.openNodeScope(jjtn002);
          jjtn002.jjtSetFirstToken(getToken(1));
        }
        try {
/*@egen*/ AdditiveExpression()/*@bgen(jjtree)*/
        } catch (Throwable jjte002) {
          if (jjtc002) {
            jjtree.clearNodeScope(jjtn002);
            jjtc002 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte002 instanceof RuntimeException) {
            throw (RuntimeException)jjte002;
          }
          if (jjte002 instanceof ParseException) {
            throw (ParseException)jjte002;
          }
          throw (Error)jjte002;
        } finally {
          if (jjtc002) {
            jjtree.closeNodeScope(jjtn002,  2);
            jjtn002.jjtSetLastToken(getToken(0));
          }
        }
/*@egen*/           
   |
    "<="/*@bgen(jjtree) #LENode( 2) */
         {
           ASTLENode jjtn003 = new ASTLENode(JJTLENODE);
           boolean jjtc003 = true;
           jjtree.openNodeScope(jjtn003);
           jjtn003.jjtSetFirstToken(getToken(1));
         }
         try {
/*@egen*/ AdditiveExpression()/*@bgen(jjtree)*/
         } catch (Throwable jjte003) {
           if (jjtc003) {
             jjtree.clearNodeScope(jjtn003);
             jjtc003 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte003 instanceof RuntimeException) {
             throw (RuntimeException)jjte003;
           }
           if (jjte003 instanceof ParseException) {
             throw (ParseException)jjte003;
           }
           throw (Error)jjte003;
         } finally {
           if (jjtc003) {
             jjtree.closeNodeScope(jjtn003,  2);
             jjtn003.jjtSetLastToken(getToken(0));
           }
         }
/*@egen*/           
   |
    ">="/*@bgen(jjtree) #GENode( 2) */
         {
           ASTGENode jjtn004 = new ASTGENode(JJTGENODE);
           boolean jjtc004 = true;
           jjtree.openNodeScope(jjtn004);
           jjtn004.jjtSetFirstToken(getToken(1));
         }
         try {
/*@egen*/ AdditiveExpression()/*@bgen(jjtree)*/
         } catch (Throwable jjte004) {
           if (jjtc004) {
             jjtree.clearNodeScope(jjtn004);
             jjtc004 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte004 instanceof RuntimeException) {
             throw (RuntimeException)jjte004;
           }
           if (jjte004 instanceof ParseException) {
             throw (ParseException)jjte004;
           }
           throw (Error)jjte004;
         } finally {
           if (jjtc004) {
             jjtree.closeNodeScope(jjtn004,  2);
             jjtn004.jjtSetLastToken(getToken(0));
           }
         }
/*@egen*/           
  )*
}

void AdditiveExpression()       :
{}
{
  MultiplicativeExpression()
  (
    "+"/*@bgen(jjtree) #AddNode( 2) */
        {
          ASTAddNode jjtn001 = new ASTAddNode(JJTADDNODE);
          boolean jjtc001 = true;
          jjtree.openNodeScope(jjtn001);
          jjtn001.jjtSetFirstToken(getToken(1));
        }
        try {
/*@egen*/ MultiplicativeExpression()/*@bgen(jjtree)*/
        } catch (Throwable jjte001) {
          if (jjtc001) {
            jjtree.clearNodeScope(jjtn001);
            jjtc001 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte001 instanceof RuntimeException) {
            throw (RuntimeException)jjte001;
          }
          if (jjte001 instanceof ParseException) {
            throw (ParseException)jjte001;
          }
          throw (Error)jjte001;
        } finally {
          if (jjtc001) {
            jjtree.closeNodeScope(jjtn001,  2);
            jjtn001.jjtSetLastToken(getToken(0));
          }
        }
/*@egen*/            
   |
    "-"/*@bgen(jjtree) #SubtractNode( 2) */
        {
          ASTSubtractNode jjtn002 = new ASTSubtractNode(JJTSUBTRACTNODE);
          boolean jjtc002 = true;
          jjtree.openNodeScope(jjtn002);
          jjtn002.jjtSetFirstToken(getToken(1));
        }
        try {
/*@egen*/ MultiplicativeExpression()/*@bgen(jjtree)*/
        } catch (Throwable jjte002) {
          if (jjtc002) {
            jjtree.clearNodeScope(jjtn002);
            jjtc002 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte002 instanceof RuntimeException) {
            throw (RuntimeException)jjte002;
          }
          if (jjte002 instanceof ParseException) {
            throw (ParseException)jjte002;
          }
          throw (Error)jjte002;
        } finally {
          if (jjtc002) {
            jjtree.closeNodeScope(jjtn002,  2);
            jjtn002.jjtSetLastToken(getToken(0));
          }
        }
/*@egen*/                 
  )*
}

void MultiplicativeExpression()       :
{}
{
  UnaryExpression()
  (
    "*"/*@bgen(jjtree) #MulNode( 2) */
        {
          ASTMulNode jjtn001 = new ASTMulNode(JJTMULNODE);
          boolean jjtc001 = true;
          jjtree.openNodeScope(jjtn001);
          jjtn001.jjtSetFirstToken(getToken(1));
        }
        try {
/*@egen*/ UnaryExpression()/*@bgen(jjtree)*/
        } catch (Throwable jjte001) {
          if (jjtc001) {
            jjtree.clearNodeScope(jjtn001);
            jjtc001 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte001 instanceof RuntimeException) {
            throw (RuntimeException)jjte001;
          }
          if (jjte001 instanceof ParseException) {
            throw (ParseException)jjte001;
          }
          throw (Error)jjte001;
        } finally {
          if (jjtc001) {
            jjtree.closeNodeScope(jjtn001,  2);
            jjtn001.jjtSetLastToken(getToken(0));
          }
        }
/*@egen*/            
   |
    "/"/*@bgen(jjtree) #DivNode( 2) */
        {
          ASTDivNode jjtn002 = new ASTDivNode(JJTDIVNODE);
          boolean jjtc002 = true;
          jjtree.openNodeScope(jjtn002);
          jjtn002.jjtSetFirstToken(getToken(1));
        }
        try {
/*@egen*/ UnaryExpression()/*@bgen(jjtree)*/
        } catch (Throwable jjte002) {
          if (jjtc002) {
            jjtree.clearNodeScope(jjtn002);
            jjtc002 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte002 instanceof RuntimeException) {
            throw (RuntimeException)jjte002;
          }
          if (jjte002 instanceof ParseException) {
            throw (ParseException)jjte002;
          }
          throw (Error)jjte002;
        } finally {
          if (jjtc002) {
            jjtree.closeNodeScope(jjtn002,  2);
            jjtn002.jjtSetLastToken(getToken(0));
          }
        }
/*@egen*/            
   |
    "%"/*@bgen(jjtree) #ModNode( 2) */
        {
          ASTModNode jjtn003 = new ASTModNode(JJTMODNODE);
          boolean jjtc003 = true;
          jjtree.openNodeScope(jjtn003);
          jjtn003.jjtSetFirstToken(getToken(1));
        }
        try {
/*@egen*/ UnaryExpression()/*@bgen(jjtree)*/
        } catch (Throwable jjte003) {
          if (jjtc003) {
            jjtree.clearNodeScope(jjtn003);
            jjtc003 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte003 instanceof RuntimeException) {
            throw (RuntimeException)jjte003;
          }
          if (jjte003 instanceof ParseException) {
            throw (ParseException)jjte003;
          }
          throw (Error)jjte003;
        } finally {
          if (jjtc003) {
            jjtree.closeNodeScope(jjtn003,  2);
            jjtn003.jjtSetLastToken(getToken(0));
          }
        }
/*@egen*/            
   |
    "<<"/*@bgen(jjtree) #LShiftNode( 2) */
         {
           ASTLShiftNode jjtn004 = new ASTLShiftNode(JJTLSHIFTNODE);
           boolean jjtc004 = true;
           jjtree.openNodeScope(jjtn004);
           jjtn004.jjtSetFirstToken(getToken(1));
         }
         try {
/*@egen*/ UnaryExpression()/*@bgen(jjtree)*/
         } catch (Throwable jjte004) {
           if (jjtc004) {
             jjtree.clearNodeScope(jjtn004);
             jjtc004 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte004 instanceof RuntimeException) {
             throw (RuntimeException)jjte004;
           }
           if (jjte004 instanceof ParseException) {
             throw (ParseException)jjte004;
           }
           throw (Error)jjte004;
         } finally {
           if (jjtc004) {
             jjtree.closeNodeScope(jjtn004,  2);
             jjtn004.jjtSetLastToken(getToken(0));
           }
         }
/*@egen*/               
   |
    ">>"/*@bgen(jjtree) #RShiftNode( 2) */
         {
           ASTRShiftNode jjtn005 = new ASTRShiftNode(JJTRSHIFTNODE);
           boolean jjtc005 = true;
           jjtree.openNodeScope(jjtn005);
           jjtn005.jjtSetFirstToken(getToken(1));
         }
         try {
/*@egen*/ UnaryExpression()/*@bgen(jjtree)*/
         } catch (Throwable jjte005) {
           if (jjtc005) {
             jjtree.clearNodeScope(jjtn005);
             jjtc005 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte005 instanceof RuntimeException) {
             throw (RuntimeException)jjte005;
           }
           if (jjte005 instanceof ParseException) {
             throw (ParseException)jjte005;
           }
           throw (Error)jjte005;
         } finally {
           if (jjtc005) {
             jjtree.closeNodeScope(jjtn005,  2);
             jjtn005.jjtSetLastToken(getToken(0));
           }
         }
/*@egen*/               
   |
    ">>>"/*@bgen(jjtree) #RRotNode( 2) */
          {
            ASTRRotNode jjtn006 = new ASTRRotNode(JJTRROTNODE);
            boolean jjtc006 = true;
            jjtree.openNodeScope(jjtn006);
            jjtn006.jjtSetFirstToken(getToken(1));
          }
          try {
/*@egen*/ UnaryExpression()/*@bgen(jjtree)*/
          } catch (Throwable jjte006) {
            if (jjtc006) {
              jjtree.clearNodeScope(jjtn006);
              jjtc006 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte006 instanceof RuntimeException) {
              throw (RuntimeException)jjte006;
            }
            if (jjte006 instanceof ParseException) {
              throw (ParseException)jjte006;
            }
            throw (Error)jjte006;
          } finally {
            if (jjtc006) {
              jjtree.closeNodeScope(jjtn006,  2);
              jjtn006.jjtSetLastToken(getToken(0));
            }
          }
/*@egen*/             
   |
    "<<<"/*@bgen(jjtree) #LRotNode( 2) */
          {
            ASTLRotNode jjtn007 = new ASTLRotNode(JJTLROTNODE);
            boolean jjtc007 = true;
            jjtree.openNodeScope(jjtn007);
            jjtn007.jjtSetFirstToken(getToken(1));
          }
          try {
/*@egen*/ UnaryExpression()/*@bgen(jjtree)*/
          } catch (Throwable jjte007) {
            if (jjtc007) {
              jjtree.clearNodeScope(jjtn007);
              jjtc007 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte007 instanceof RuntimeException) {
              throw (RuntimeException)jjte007;
            }
            if (jjte007 instanceof ParseException) {
              throw (ParseException)jjte007;
            }
            throw (Error)jjte007;
          } finally {
            if (jjtc007) {
              jjtree.closeNodeScope(jjtn007,  2);
              jjtn007.jjtSetLastToken(getToken(0));
            }
          }
/*@egen*/             
   |
    "xor"/*@bgen(jjtree) #BitwiseXorNode( 2) */
          {
            ASTBitwiseXorNode jjtn008 = new ASTBitwiseXorNode(JJTBITWISEXORNODE);
            boolean jjtc008 = true;
            jjtree.openNodeScope(jjtn008);
            jjtn008.jjtSetFirstToken(getToken(1));
          }
          try {
/*@egen*/ UnaryExpression()/*@bgen(jjtree)*/
          } catch (Throwable jjte008) {
            if (jjtc008) {
              jjtree.clearNodeScope(jjtn008);
              jjtc008 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte008 instanceof RuntimeException) {
              throw (RuntimeException)jjte008;
            }
            if (jjte008 instanceof ParseException) {
              throw (ParseException)jjte008;
            }
            throw (Error)jjte008;
          } finally {
            if (jjtc008) {
              jjtree.closeNodeScope(jjtn008,  2);
              jjtn008.jjtSetLastToken(getToken(0));
            }
          }
/*@egen*/                   
   |
    "and"/*@bgen(jjtree) #BitwiseAndNode( 2) */
          {
            ASTBitwiseAndNode jjtn009 = new ASTBitwiseAndNode(JJTBITWISEANDNODE);
            boolean jjtc009 = true;
            jjtree.openNodeScope(jjtn009);
            jjtn009.jjtSetFirstToken(getToken(1));
          }
          try {
/*@egen*/ UnaryExpression()/*@bgen(jjtree)*/
          } catch (Throwable jjte009) {
            if (jjtc009) {
              jjtree.clearNodeScope(jjtn009);
              jjtc009 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte009 instanceof RuntimeException) {
              throw (RuntimeException)jjte009;
            }
            if (jjte009 instanceof ParseException) {
              throw (ParseException)jjte009;
            }
            throw (Error)jjte009;
          } finally {
            if (jjtc009) {
              jjtree.closeNodeScope(jjtn009,  2);
              jjtn009.jjtSetLastToken(getToken(0));
            }
          }
/*@egen*/                   
   |
    "or"/*@bgen(jjtree) #BitwiseOrNode( 2) */
         {
           ASTBitwiseOrNode jjtn010 = new ASTBitwiseOrNode(JJTBITWISEORNODE);
           boolean jjtc010 = true;
           jjtree.openNodeScope(jjtn010);
           jjtn010.jjtSetFirstToken(getToken(1));
         }
         try {
/*@egen*/ UnaryExpression()/*@bgen(jjtree)*/
         } catch (Throwable jjte010) {
           if (jjtc010) {
             jjtree.clearNodeScope(jjtn010);
             jjtc010 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte010 instanceof RuntimeException) {
             throw (RuntimeException)jjte010;
           }
           if (jjte010 instanceof ParseException) {
             throw (ParseException)jjte010;
           }
           throw (Error)jjte010;
         } finally {
           if (jjtc010) {
             jjtree.closeNodeScope(jjtn010,  2);
             jjtn010.jjtSetLastToken(getToken(0));
           }
         }
/*@egen*/                  
  )*
}

void UnaryExpression()       :
{}
{
  "~"/*@bgen(jjtree) #BitwiseComplNode( 1) */
      {
        ASTBitwiseComplNode jjtn001 = new ASTBitwiseComplNode(JJTBITWISECOMPLNODE);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
        jjtn001.jjtSetFirstToken(getToken(1));
      }
      try {
/*@egen*/ UnaryExpression()/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001,  1);
          jjtn001.jjtSetLastToken(getToken(0));
        }
      }
/*@egen*/                     
|
  "!"/*@bgen(jjtree) #NotNode( 1) */
      {
        ASTNotNode jjtn002 = new ASTNotNode(JJTNOTNODE);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
        jjtn002.jjtSetFirstToken(getToken(1));
      }
      try {
/*@egen*/ UnaryExpression()/*@bgen(jjtree)*/
      } catch (Throwable jjte002) {
        if (jjtc002) {
          jjtree.clearNodeScope(jjtn002);
          jjtc002 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte002 instanceof RuntimeException) {
          throw (RuntimeException)jjte002;
        }
        if (jjte002 instanceof ParseException) {
          throw (ParseException)jjte002;
        }
        throw (Error)jjte002;
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002,  1);
          jjtn002.jjtSetLastToken(getToken(0));
        }
      }
/*@egen*/            
|
  PrimaryExpression()
}

void PrimaryExpression()       :
{
   String name;
}
{
  Literal()
|
  Id() 
|
  "(" Expression() ")"
}

void Id():
{/*@bgen(jjtree) Id */
  ASTId jjtn000 = new ASTId(JJTID);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) Id */
  try {
/*@egen*/
  "m[" AdditiveExpression() "]"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void Literal()       :
{
   Token t;
}
{/*@bgen(jjtree) IntConstNode */
 {
   ASTIntConstNode jjtn001 = new ASTIntConstNode(JJTINTCONSTNODE);
   boolean jjtc001 = true;
   jjtree.openNodeScope(jjtn001);
   jjtn001.jjtSetFirstToken(getToken(1));
 }
 try {
/*@egen*/
 (
  t=<INTEGER_LITERAL>/*@bgen(jjtree)*/
    {
      jjtree.closeNodeScope(jjtn001, true);
      jjtc001 = false;
      jjtn001.jjtSetLastToken(getToken(0));
    }
/*@egen*/
    {
       jjtn001.val = Integer.parseInt(t.image);
    }
 )/*@bgen(jjtree)*/
 } finally {
   if (jjtc001) {
     jjtree.closeNodeScope(jjtn001, true);
     jjtn001.jjtSetLastToken(getToken(0));
   }
 }
/*@egen*/             
}


void BooleanLiteral()       :
{}
{/*@bgen(jjtree) TrueNode */
  {
    ASTTrueNode jjtn001 = new ASTTrueNode(JJTTRUENODE);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtn001.jjtSetFirstToken(getToken(1));
  }
  try {
/*@egen*/
  "true"/*@bgen(jjtree)*/
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
      jjtn001.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/          
|/*@bgen(jjtree) FalseNode */
  {
    ASTFalseNode jjtn002 = new ASTFalseNode(JJTFALSENODE);
    boolean jjtc002 = true;
    jjtree.openNodeScope(jjtn002);
    jjtn002.jjtSetFirstToken(getToken(1));
  }
  try {
/*@egen*/
  "false"/*@bgen(jjtree)*/
  } finally {
    if (jjtc002) {
      jjtree.closeNodeScope(jjtn002, true);
      jjtn002.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/           
}

void Statement()       :
{}
{
  ";"
|
  Block()
|
  StatementExpression()
|
  IfStatement()
|
  RepeatStatement()
|
  SHA256()
| 
  MD5()
| 
  RIPEMD160()
| 
  RIPEMD128()
| 
  SHA512()
| 
  Tiger()
| 
  Whirlpool()
|
  SECP192K1PrivToPub()
|
  SECP192K1PointAdd()
|
  SECP192K1PointSub()
|
  SECP192K1PointScalarMult()
|
  SECP192K1PointNegate()
|
  SECP192R1PrivToPub()
|
  SECP192R1PointAdd()
|
  SECP192R1PointSub()
|
  SECP192R1PointScalarMult()
|
  SECP192R1PointNegate()
|
  SECP224K1PrivToPub()
|
  SECP224K1PointAdd()
|
  SECP224K1PointSub()
|
  SECP224K1PointScalarMult()
|
  SECP224K1PointNegate()
|
  SECP224R1PrivToPub()
|
  SECP224R1PointAdd()
|
  SECP224R1PointSub()
|
  SECP224R1PointScalarMult()
|
  SECP224R1PointNegate()
|
  SECP256K1PrivToPub()
|
  SECP256K1PointAdd()
|
  SECP256K1PointSub()
|
  SECP256K1PointScalarMult()
|
  SECP256K1PointNegate()
|
  SECP256R1PrivToPub()
|
  SECP256R1PointAdd()
|
  SECP256R1PointSub()
|
  SECP256R1PointScalarMult()
|
  SECP256R1PointNegate()
|
  SECP384R1PrivToPub()
|
  SECP384R1PointAdd()
|
  SECP384R1PointSub()
|
  SECP384R1PointScalarMult()
|
  SECP384R1PointNegate()
|
  PRIME192V1PrivToPub()
|
  PRIME192V1PointAdd()
|
  PRIME192V1PointSub()
|
  PRIME192V1PointScalarMult()
|
  PRIME192V1PointNegate()
|
  PRIME192V2PrivToPub()
|
  PRIME192V2PointAdd()
|
  PRIME192V2PointSub()
|
  PRIME192V2PointScalarMult()
|
  PRIME192V2PointNegate()
|
  PRIME192V3PrivToPub()
|
  PRIME192V3PointAdd()
|
  PRIME192V3PointSub()
|
  PRIME192V3PointScalarMult()
|
  PRIME192V3PointNegate()
|
  PRIME256V1PrivToPub()
|
  PRIME256V1PointAdd()
|
  PRIME256V1PointSub()
|
  PRIME256V1PointScalarMult()
|
  PRIME256V1PointNegate()
}


void Block() :
{/*@bgen(jjtree) Block */
  ASTBlock jjtn000 = new ASTBlock(JJTBLOCK);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) Block */
  try {
/*@egen*/
  "{" ( Statement() )* "}"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void StatementExpression() :
{/*@bgen(jjtree) StatementExpression */
  ASTStatementExpression jjtn000 = new ASTStatementExpression(JJTSTATEMENTEXPRESSION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) StatementExpression */
  try {
/*@egen*/
  Assignment() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void IfStatement() :
{/*@bgen(jjtree) IfStatement */
  ASTIfStatement jjtn000 = new ASTIfStatement(JJTIFSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) IfStatement */
  try {
/*@egen*/
  "if" "(" Expression() ")" Statement() [ LOOKAHEAD(1) "else" Statement() ]/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void RepeatStatement()                    :
{/*@bgen(jjtree) #RepeatStatement( 2) */
  ASTRepeatStatement jjtn000 = new ASTRepeatStatement(JJTREPEATSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #RepeatStatement( 2) */
  try {
/*@egen*/
  "repeat" "(" Literal() ")" Block()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void InputSpecificationStatement()                                :
{/*@bgen(jjtree) #InputSpecificationStatement( 1) */
  ASTInputSpecificationStatement jjtn000 = new ASTInputSpecificationStatement(JJTINPUTSPECIFICATIONSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #InputSpecificationStatement( 1) */
  try {
/*@egen*/
  "input" Literal() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  1);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SHA256()           :
{/*@bgen(jjtree) #SHA256( 2) */
  ASTSHA256 jjtn000 = new ASTSHA256(JJTSHA256);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SHA256( 2) */
  try {
/*@egen*/
  "SHA256" Literal() Literal() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void SHA512()           :
{/*@bgen(jjtree) #SHA512( 2) */
  ASTSHA512 jjtn000 = new ASTSHA512(JJTSHA512);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SHA512( 2) */
  try {
/*@egen*/
  "SHA512" Literal() Literal() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void Whirlpool()              :
{/*@bgen(jjtree) #Whirlpool( 2) */
  ASTWhirlpool jjtn000 = new ASTWhirlpool(JJTWHIRLPOOL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #Whirlpool( 2) */
  try {
/*@egen*/
  "Whirlpool" Literal() Literal() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void MD5()        :
{/*@bgen(jjtree) #MD5( 2) */
  ASTMD5 jjtn000 = new ASTMD5(JJTMD5);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #MD5( 2) */
  try {
/*@egen*/
  "MD5" Literal() Literal() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP192K1PrivToPub()                       :
{/*@bgen(jjtree) #SECP192K1PrivToPub( 2) */
  ASTSECP192K1PrivToPub jjtn000 = new ASTSECP192K1PrivToPub(JJTSECP192K1PRIVTOPUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP192K1PrivToPub( 2) */
  try {
/*@egen*/
  "SECP192K1PrivToPub" Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP192K1PointAdd()                      :
{/*@bgen(jjtree) #SECP192K1PointAdd( 5) */
  ASTSECP192K1PointAdd jjtn000 = new ASTSECP192K1PointAdd(JJTSECP192K1POINTADD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP192K1PointAdd( 5) */
  try {
/*@egen*/
  "SECP192K1PointAdd" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP192K1PointSub()                      :
{/*@bgen(jjtree) #SECP192K1PointSub( 5) */
  ASTSECP192K1PointSub jjtn000 = new ASTSECP192K1PointSub(JJTSECP192K1POINTSUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP192K1PointSub( 5) */
  try {
/*@egen*/
  "SECP192K1PointSub" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void SECP192K1PointScalarMult()                             :
{/*@bgen(jjtree) #SECP192K1PointScalarMult( 5) */
  ASTSECP192K1PointScalarMult jjtn000 = new ASTSECP192K1PointScalarMult(JJTSECP192K1POINTSCALARMULT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP192K1PointScalarMult( 5) */
  try {
/*@egen*/
  "SECP192K1PointScalarMult" Literal() BooleanLiteral() Literal() Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP192K1PointNegate()                         :
{/*@bgen(jjtree) #SECP192K1PointNegate( 3) */
  ASTSECP192K1PointNegate jjtn000 = new ASTSECP192K1PointNegate(JJTSECP192K1POINTNEGATE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP192K1PointNegate( 3) */
  try {
/*@egen*/
  "SECP192K1PointNegate" Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  3);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}




void SECP192R1PrivToPub()                       :
{/*@bgen(jjtree) #SECP192R1PrivToPub( 2) */
  ASTSECP192R1PrivToPub jjtn000 = new ASTSECP192R1PrivToPub(JJTSECP192R1PRIVTOPUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP192R1PrivToPub( 2) */
  try {
/*@egen*/
  "SECP192R1PrivToPub" Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP192R1PointAdd()                      :
{/*@bgen(jjtree) #SECP192R1PointAdd( 5) */
  ASTSECP192R1PointAdd jjtn000 = new ASTSECP192R1PointAdd(JJTSECP192R1POINTADD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP192R1PointAdd( 5) */
  try {
/*@egen*/
  "SECP192R1PointAdd" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP192R1PointSub()                      :
{/*@bgen(jjtree) #SECP192R1PointSub( 5) */
  ASTSECP192R1PointSub jjtn000 = new ASTSECP192R1PointSub(JJTSECP192R1POINTSUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP192R1PointSub( 5) */
  try {
/*@egen*/
  "SECP192R1PointSub" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void SECP192R1PointScalarMult()                             :
{/*@bgen(jjtree) #SECP192R1PointScalarMult( 5) */
  ASTSECP192R1PointScalarMult jjtn000 = new ASTSECP192R1PointScalarMult(JJTSECP192R1POINTSCALARMULT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP192R1PointScalarMult( 5) */
  try {
/*@egen*/
  "SECP192R1PointScalarMult" Literal() BooleanLiteral() Literal() Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP192R1PointNegate()                         :
{/*@bgen(jjtree) #SECP192R1PointNegate( 3) */
  ASTSECP192R1PointNegate jjtn000 = new ASTSECP192R1PointNegate(JJTSECP192R1POINTNEGATE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP192R1PointNegate( 3) */
  try {
/*@egen*/
  "SECP192R1PointNegate" Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  3);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}




void SECP224K1PrivToPub()                       :
{/*@bgen(jjtree) #SECP224K1PrivToPub( 2) */
  ASTSECP224K1PrivToPub jjtn000 = new ASTSECP224K1PrivToPub(JJTSECP224K1PRIVTOPUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP224K1PrivToPub( 2) */
  try {
/*@egen*/
  "SECP224K1PrivToPub" Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP224K1PointAdd()                      :
{/*@bgen(jjtree) #SECP224K1PointAdd( 5) */
  ASTSECP224K1PointAdd jjtn000 = new ASTSECP224K1PointAdd(JJTSECP224K1POINTADD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP224K1PointAdd( 5) */
  try {
/*@egen*/
  "SECP224K1PointAdd" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP224K1PointSub()                      :
{/*@bgen(jjtree) #SECP224K1PointSub( 5) */
  ASTSECP224K1PointSub jjtn000 = new ASTSECP224K1PointSub(JJTSECP224K1POINTSUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP224K1PointSub( 5) */
  try {
/*@egen*/
  "SECP224K1PointSub" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void SECP224K1PointScalarMult()                             :
{/*@bgen(jjtree) #SECP224K1PointScalarMult( 5) */
  ASTSECP224K1PointScalarMult jjtn000 = new ASTSECP224K1PointScalarMult(JJTSECP224K1POINTSCALARMULT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP224K1PointScalarMult( 5) */
  try {
/*@egen*/
  "SECP224K1PointScalarMult" Literal() BooleanLiteral() Literal() Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP224K1PointNegate()                         :
{/*@bgen(jjtree) #SECP224K1PointNegate( 3) */
  ASTSECP224K1PointNegate jjtn000 = new ASTSECP224K1PointNegate(JJTSECP224K1POINTNEGATE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP224K1PointNegate( 3) */
  try {
/*@egen*/
  "SECP224K1PointNegate" Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  3);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}




void SECP224R1PrivToPub()                       :
{/*@bgen(jjtree) #SECP224R1PrivToPub( 2) */
  ASTSECP224R1PrivToPub jjtn000 = new ASTSECP224R1PrivToPub(JJTSECP224R1PRIVTOPUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP224R1PrivToPub( 2) */
  try {
/*@egen*/
  "SECP224R1PrivToPub" Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP224R1PointAdd()                      :
{/*@bgen(jjtree) #SECP224R1PointAdd( 5) */
  ASTSECP224R1PointAdd jjtn000 = new ASTSECP224R1PointAdd(JJTSECP224R1POINTADD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP224R1PointAdd( 5) */
  try {
/*@egen*/
  "SECP224R1PointAdd" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP224R1PointSub()                      :
{/*@bgen(jjtree) #SECP224R1PointSub( 5) */
  ASTSECP224R1PointSub jjtn000 = new ASTSECP224R1PointSub(JJTSECP224R1POINTSUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP224R1PointSub( 5) */
  try {
/*@egen*/
  "SECP224R1PointSub" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void SECP224R1PointScalarMult()                             :
{/*@bgen(jjtree) #SECP224R1PointScalarMult( 5) */
  ASTSECP224R1PointScalarMult jjtn000 = new ASTSECP224R1PointScalarMult(JJTSECP224R1POINTSCALARMULT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP224R1PointScalarMult( 5) */
  try {
/*@egen*/
  "SECP224R1PointScalarMult" Literal() BooleanLiteral() Literal() Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP224R1PointNegate()                         :
{/*@bgen(jjtree) #SECP224R1PointNegate( 3) */
  ASTSECP224R1PointNegate jjtn000 = new ASTSECP224R1PointNegate(JJTSECP224R1POINTNEGATE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP224R1PointNegate( 3) */
  try {
/*@egen*/
  "SECP224R1PointNegate" Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  3);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}




void SECP256K1PrivToPub()                       :
{/*@bgen(jjtree) #SECP256K1PrivToPub( 2) */
  ASTSECP256K1PrivToPub jjtn000 = new ASTSECP256K1PrivToPub(JJTSECP256K1PRIVTOPUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP256K1PrivToPub( 2) */
  try {
/*@egen*/
  "SECP256K1PrivToPub" Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP256K1PointAdd()                      :
{/*@bgen(jjtree) #SECP256K1PointAdd( 5) */
  ASTSECP256K1PointAdd jjtn000 = new ASTSECP256K1PointAdd(JJTSECP256K1POINTADD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP256K1PointAdd( 5) */
  try {
/*@egen*/
  "SECP256K1PointAdd" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP256K1PointSub()                      :
{/*@bgen(jjtree) #SECP256K1PointSub( 5) */
  ASTSECP256K1PointSub jjtn000 = new ASTSECP256K1PointSub(JJTSECP256K1POINTSUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP256K1PointSub( 5) */
  try {
/*@egen*/
  "SECP256K1PointSub" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void SECP256K1PointScalarMult()                             :
{/*@bgen(jjtree) #SECP256K1PointScalarMult( 5) */
  ASTSECP256K1PointScalarMult jjtn000 = new ASTSECP256K1PointScalarMult(JJTSECP256K1POINTSCALARMULT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP256K1PointScalarMult( 5) */
  try {
/*@egen*/
  "SECP256K1PointScalarMult" Literal() BooleanLiteral() Literal() Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP256K1PointNegate()                         :
{/*@bgen(jjtree) #SECP256K1PointNegate( 3) */
  ASTSECP256K1PointNegate jjtn000 = new ASTSECP256K1PointNegate(JJTSECP256K1POINTNEGATE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP256K1PointNegate( 3) */
  try {
/*@egen*/
  "SECP256K1PointNegate" Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  3);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}




void SECP256R1PrivToPub()                       :
{/*@bgen(jjtree) #SECP256R1PrivToPub( 2) */
  ASTSECP256R1PrivToPub jjtn000 = new ASTSECP256R1PrivToPub(JJTSECP256R1PRIVTOPUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP256R1PrivToPub( 2) */
  try {
/*@egen*/
  "SECP256R1PrivToPub" Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP256R1PointAdd()                      :
{/*@bgen(jjtree) #SECP256R1PointAdd( 5) */
  ASTSECP256R1PointAdd jjtn000 = new ASTSECP256R1PointAdd(JJTSECP256R1POINTADD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP256R1PointAdd( 5) */
  try {
/*@egen*/
  "SECP256R1PointAdd" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP256R1PointSub()                      :
{/*@bgen(jjtree) #SECP256R1PointSub( 5) */
  ASTSECP256R1PointSub jjtn000 = new ASTSECP256R1PointSub(JJTSECP256R1POINTSUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP256R1PointSub( 5) */
  try {
/*@egen*/
  "SECP256R1PointSub" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void SECP256R1PointScalarMult()                             :
{/*@bgen(jjtree) #SECP256R1PointScalarMult( 5) */
  ASTSECP256R1PointScalarMult jjtn000 = new ASTSECP256R1PointScalarMult(JJTSECP256R1POINTSCALARMULT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP256R1PointScalarMult( 5) */
  try {
/*@egen*/
  "SECP256R1PointScalarMult" Literal() BooleanLiteral() Literal() Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP256R1PointNegate()                         :
{/*@bgen(jjtree) #SECP256R1PointNegate( 3) */
  ASTSECP256R1PointNegate jjtn000 = new ASTSECP256R1PointNegate(JJTSECP256R1POINTNEGATE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP256R1PointNegate( 3) */
  try {
/*@egen*/
  "SECP256R1PointNegate" Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  3);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}




void SECP384R1PrivToPub()                       :
{/*@bgen(jjtree) #SECP384R1PrivToPub( 2) */
  ASTSECP384R1PrivToPub jjtn000 = new ASTSECP384R1PrivToPub(JJTSECP384R1PRIVTOPUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP384R1PrivToPub( 2) */
  try {
/*@egen*/
  "SECP384R1PrivToPub" Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP384R1PointAdd()                      :
{/*@bgen(jjtree) #SECP384R1PointAdd( 5) */
  ASTSECP384R1PointAdd jjtn000 = new ASTSECP384R1PointAdd(JJTSECP384R1POINTADD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP384R1PointAdd( 5) */
  try {
/*@egen*/
  "SECP384R1PointAdd" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP384R1PointSub()                      :
{/*@bgen(jjtree) #SECP384R1PointSub( 5) */
  ASTSECP384R1PointSub jjtn000 = new ASTSECP384R1PointSub(JJTSECP384R1POINTSUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP384R1PointSub( 5) */
  try {
/*@egen*/
  "SECP384R1PointSub" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void SECP384R1PointScalarMult()                             :
{/*@bgen(jjtree) #SECP384R1PointScalarMult( 5) */
  ASTSECP384R1PointScalarMult jjtn000 = new ASTSECP384R1PointScalarMult(JJTSECP384R1POINTSCALARMULT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP384R1PointScalarMult( 5) */
  try {
/*@egen*/
  "SECP384R1PointScalarMult" Literal() BooleanLiteral() Literal() Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void SECP384R1PointNegate()                         :
{/*@bgen(jjtree) #SECP384R1PointNegate( 3) */
  ASTSECP384R1PointNegate jjtn000 = new ASTSECP384R1PointNegate(JJTSECP384R1POINTNEGATE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #SECP384R1PointNegate( 3) */
  try {
/*@egen*/
  "SECP384R1PointNegate" Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  3);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}




void PRIME192V1PrivToPub()                        :
{/*@bgen(jjtree) #PRIME192V1PrivToPub( 2) */
  ASTPRIME192V1PrivToPub jjtn000 = new ASTPRIME192V1PrivToPub(JJTPRIME192V1PRIVTOPUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V1PrivToPub( 2) */
  try {
/*@egen*/
  "PRIME192V1PrivToPub" Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void PRIME192V1PointAdd()                       :
{/*@bgen(jjtree) #PRIME192V1PointAdd( 5) */
  ASTPRIME192V1PointAdd jjtn000 = new ASTPRIME192V1PointAdd(JJTPRIME192V1POINTADD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V1PointAdd( 5) */
  try {
/*@egen*/
  "PRIME192V1PointAdd" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void PRIME192V1PointSub()                       :
{/*@bgen(jjtree) #PRIME192V1PointSub( 5) */
  ASTPRIME192V1PointSub jjtn000 = new ASTPRIME192V1PointSub(JJTPRIME192V1POINTSUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V1PointSub( 5) */
  try {
/*@egen*/
  "PRIME192V1PointSub" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void PRIME192V1PointScalarMult()                              :
{/*@bgen(jjtree) #PRIME192V1PointScalarMult( 5) */
  ASTPRIME192V1PointScalarMult jjtn000 = new ASTPRIME192V1PointScalarMult(JJTPRIME192V1POINTSCALARMULT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V1PointScalarMult( 5) */
  try {
/*@egen*/
  "PRIME192V1PointScalarMult" Literal() BooleanLiteral() Literal() Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void PRIME192V1PointNegate()                          :
{/*@bgen(jjtree) #PRIME192V1PointNegate( 3) */
  ASTPRIME192V1PointNegate jjtn000 = new ASTPRIME192V1PointNegate(JJTPRIME192V1POINTNEGATE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V1PointNegate( 3) */
  try {
/*@egen*/
  "PRIME192V1PointNegate" Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  3);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}




void PRIME192V2PrivToPub()                        :
{/*@bgen(jjtree) #PRIME192V2PrivToPub( 2) */
  ASTPRIME192V2PrivToPub jjtn000 = new ASTPRIME192V2PrivToPub(JJTPRIME192V2PRIVTOPUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V2PrivToPub( 2) */
  try {
/*@egen*/
  "PRIME192V2PrivToPub" Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void PRIME192V2PointAdd()                       :
{/*@bgen(jjtree) #PRIME192V2PointAdd( 5) */
  ASTPRIME192V2PointAdd jjtn000 = new ASTPRIME192V2PointAdd(JJTPRIME192V2POINTADD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V2PointAdd( 5) */
  try {
/*@egen*/
  "PRIME192V2PointAdd" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void PRIME192V2PointSub()                       :
{/*@bgen(jjtree) #PRIME192V2PointSub( 5) */
  ASTPRIME192V2PointSub jjtn000 = new ASTPRIME192V2PointSub(JJTPRIME192V2POINTSUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V2PointSub( 5) */
  try {
/*@egen*/
  "PRIME192V2PointSub" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void PRIME192V2PointScalarMult()                              :
{/*@bgen(jjtree) #PRIME192V2PointScalarMult( 5) */
  ASTPRIME192V2PointScalarMult jjtn000 = new ASTPRIME192V2PointScalarMult(JJTPRIME192V2POINTSCALARMULT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V2PointScalarMult( 5) */
  try {
/*@egen*/
  "PRIME192V2PointScalarMult" Literal() BooleanLiteral() Literal() Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void PRIME192V2PointNegate()                          :
{/*@bgen(jjtree) #PRIME192V2PointNegate( 3) */
  ASTPRIME192V2PointNegate jjtn000 = new ASTPRIME192V2PointNegate(JJTPRIME192V2POINTNEGATE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V2PointNegate( 3) */
  try {
/*@egen*/
  "PRIME192V2PointNegate" Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  3);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}




void PRIME192V3PrivToPub()                        :
{/*@bgen(jjtree) #PRIME192V3PrivToPub( 2) */
  ASTPRIME192V3PrivToPub jjtn000 = new ASTPRIME192V3PrivToPub(JJTPRIME192V3PRIVTOPUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V3PrivToPub( 2) */
  try {
/*@egen*/
  "PRIME192V3PrivToPub" Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void PRIME192V3PointAdd()                       :
{/*@bgen(jjtree) #PRIME192V3PointAdd( 5) */
  ASTPRIME192V3PointAdd jjtn000 = new ASTPRIME192V3PointAdd(JJTPRIME192V3POINTADD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V3PointAdd( 5) */
  try {
/*@egen*/
  "PRIME192V3PointAdd" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void PRIME192V3PointSub()                       :
{/*@bgen(jjtree) #PRIME192V3PointSub( 5) */
  ASTPRIME192V3PointSub jjtn000 = new ASTPRIME192V3PointSub(JJTPRIME192V3POINTSUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V3PointSub( 5) */
  try {
/*@egen*/
  "PRIME192V3PointSub" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void PRIME192V3PointScalarMult()                              :
{/*@bgen(jjtree) #PRIME192V3PointScalarMult( 5) */
  ASTPRIME192V3PointScalarMult jjtn000 = new ASTPRIME192V3PointScalarMult(JJTPRIME192V3POINTSCALARMULT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V3PointScalarMult( 5) */
  try {
/*@egen*/
  "PRIME192V3PointScalarMult" Literal() BooleanLiteral() Literal() Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void PRIME192V3PointNegate()                          :
{/*@bgen(jjtree) #PRIME192V3PointNegate( 3) */
  ASTPRIME192V3PointNegate jjtn000 = new ASTPRIME192V3PointNegate(JJTPRIME192V3POINTNEGATE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME192V3PointNegate( 3) */
  try {
/*@egen*/
  "PRIME192V3PointNegate" Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  3);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}




void PRIME256V1PrivToPub()                        :
{/*@bgen(jjtree) #PRIME256V1PrivToPub( 2) */
  ASTPRIME256V1PrivToPub jjtn000 = new ASTPRIME256V1PrivToPub(JJTPRIME256V1PRIVTOPUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME256V1PrivToPub( 2) */
  try {
/*@egen*/
  "PRIME256V1PrivToPub" Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void PRIME256V1PointAdd()                       :
{/*@bgen(jjtree) #PRIME256V1PointAdd( 5) */
  ASTPRIME256V1PointAdd jjtn000 = new ASTPRIME256V1PointAdd(JJTPRIME256V1POINTADD);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME256V1PointAdd( 5) */
  try {
/*@egen*/
  "PRIME256V1PointAdd" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void PRIME256V1PointSub()                       :
{/*@bgen(jjtree) #PRIME256V1PointSub( 5) */
  ASTPRIME256V1PointSub jjtn000 = new ASTPRIME256V1PointSub(JJTPRIME256V1POINTSUB);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME256V1PointSub( 5) */
  try {
/*@egen*/
  "PRIME256V1PointSub" Literal() BooleanLiteral() Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void PRIME256V1PointScalarMult()                              :
{/*@bgen(jjtree) #PRIME256V1PointScalarMult( 5) */
  ASTPRIME256V1PointScalarMult jjtn000 = new ASTPRIME256V1PointScalarMult(JJTPRIME256V1POINTSCALARMULT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME256V1PointScalarMult( 5) */
  try {
/*@egen*/
  "PRIME256V1PointScalarMult" Literal() BooleanLiteral() Literal() Literal() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  5);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void PRIME256V1PointNegate()                          :
{/*@bgen(jjtree) #PRIME256V1PointNegate( 3) */
  ASTPRIME256V1PointNegate jjtn000 = new ASTPRIME256V1PointNegate(JJTPRIME256V1POINTNEGATE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #PRIME256V1PointNegate( 3) */
  try {
/*@egen*/
  "PRIME256V1PointNegate" Literal() BooleanLiteral() BooleanLiteral() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  3);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void Tiger()          :
{/*@bgen(jjtree) #Tiger( 2) */
  ASTTiger jjtn000 = new ASTTiger(JJTTIGER);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #Tiger( 2) */
  try {
/*@egen*/
  "Tiger" Literal() Literal() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void RIPEMD160()              :
{/*@bgen(jjtree) #RIPEMD160( 2) */
  ASTRIPEMD160 jjtn000 = new ASTRIPEMD160(JJTRIPEMD160);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #RIPEMD160( 2) */
  try {
/*@egen*/
  "RIPEMD160" Literal() Literal() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}
void RIPEMD128()              :
{/*@bgen(jjtree) #RIPEMD128( 2) */
  ASTRIPEMD128 jjtn000 = new ASTRIPEMD128(JJTRIPEMD128);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) #RIPEMD128( 2) */
  try {
/*@egen*/
  "RIPEMD128" Literal() Literal() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000,  2);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}

void VerifyStatement() :
{/*@bgen(jjtree) VerifyStatement */
  ASTVerifyStatement jjtn000 = new ASTVerifyStatement(JJTVERIFYSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtn000.jjtSetFirstToken(getToken(1));
/*@egen*/}
{/*@bgen(jjtree) VerifyStatement */
  try {
/*@egen*/
  "verify" ConditionalOrExpression() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtn000.jjtSetLastToken(getToken(0));
    }
  }
/*@egen*/
}


TOKEN : /* IDENTIFIERS */
{
  < IDENTIFIER: <LETTER> (<LETTER>|<DIGIT>)* >
|
  < #LETTER: [ "a"-"z", "A"-"Z" ] >
|
  < #DIGIT: [ "0"-"9"] >
|
  < #DIGIT_FROM_ONE: [ "1"-"9"] >
|
  < #DIGIT_ONE_TO_SIX: [ "1"-"6"] > 
}
