/* Generated By:JJTree: Do not edit this line. ASTNegationNode.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=AST,NODE_EXTENDS=MyNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package elastic.pl.interpreter;

public
class ASTNegationNode extends SimpleNode {
  public ASTNegationNode(int id) {
    super(id);
  }

  public ASTNegationNode(ElasticPLParser p, int id) {
    super(p, id);
  }

  public void interpret()
  {
     Boolean first_was_boolean = false;

     jjtGetChild(0).interpret();

     if (stack[top] instanceof Boolean)
        first_was_boolean = true;


     Integer int1 = 0;
     if(stack[top] instanceof Integer)
      int1 = ((Integer)stack[top]).intValue();
     else if(stack[top] instanceof Boolean)
      int1 = (((Boolean)stack[top]) == true) ? 1 : 0;
      

     if(first_was_boolean)
       stack[top] = new Boolean((int1 == 1)?false:true);
     else
       stack[top] = new Integer(-int1);



  }
  public long getConsumedStackUsage(){
      return 0L;
    }
}
/* JavaCC - OriginalChecksum=52baa6ff1c44a5a391405672be5b682f (do not edit this line) */
